const Discord = require('discord.js');
const { owner, filmchannel } = require('../config.json')

module.exports = {
    name: 'message',
    on: true,
    run: async(message, client) => {
        const Maxynn = await client.users.fetch(owner);
        if (!message.content.startsWith(process.env.PREFIX) || message.author.bot) return;
        if (!message.guild) return;
        if (!message.member) {
            message.member = await message.guild.fetchMember(message);
        }

        const args = message.content.slice(process.env.PREFIX.length).trim().split(/ +/);
        const commandName = args.shift().toLowerCase();

        if (commandName === 'film') {
            message.delete();
            const filmembed = new Discord.MessageEmbed()
                .setColor('0xe91e63')
                .setAuthor('Film üé•')
                .setTimestamp()
                .addField('Th√¥ng tin film', `${args.join(" ")}`)
                .setFooter(`Xem phim c√πng ${Maxynn.tag}`, `${Maxynn.displayAvatarURL({ dynamic: true })}`);
            const filmchannels = message.guild.channels.cache.get(filmchannel);
            filmchannels.send(filmembed);
        }

        const cmd = client.commands.get(commandName) || client.commands.find(c => c.aliases && c.aliases.includes(commandName));

        if(!cmd) return;

        if (cmd.guildOnly && message.channel.type === 'dm') {
            return message.reply('T√¥i kh√¥ng th·ªÉ th·ª±c hi·ªán l·ªánh ƒë√≥ b√™n trong DM!');
        }

        if (cmd.permissions) {
            const authorPerms = message.channel.permissionsFor(message.author);
            if (!authorPerms || authorPerms.has(cmd.permissions)) {
                return message.reply('B·∫°n kh√¥ng c√≥ quy·ªÅn ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y!');
            };
        };
    
        if (cmd.args && !args.length) {
            let reply = `B·∫°n ch∆∞a cung c·∫•p b·∫•t k·ª≥ ƒë·ªëi s·ªë n√†o c·∫£, ${message.author}!`;
            if (cmd.usage) {
                reply += `\nC√°ch s·ª≠ d·ª•ng th√≠ch h·ª£p s·∫Ω l√†: \`${prefix}${cmd.name}\` ho·∫∑c \`${cmd.usage}\``;
            };
            return message.channel.send(reply);
        }

        const { cooldowns } = client;

        if (!cooldowns.has(cmd.name)) {
            cooldowns.set(cmd.name, new Discord.Collection());
        }

        const now = Date.now();
        const timestamps = cooldowns.get(cmd.name);
        const cooldownAmount = (cmd.cooldown || 3) * 1000;

        if (timestamps.has(message.author.id)) {
            const expirationTime = timestamps.get(message.author.id) + cooldownAmount;
            if (now < expirationTime) {
                const timeLeft = (expirationTime - now) / 1000;
                return message.reply(`Vui l√≤ng ƒë·ª£i th√™m ${timeLeft.toFixed(1)} gi√¢y tr∆∞·ªõc khi s·ª≠ d·ª•ng l·∫°i l·ªánh \`${cmd.name}\`.`).then(msg => {
                    msg.delete({ timeout: 10000 })
                });
            }
        }

        timestamps.set(message.author.id, now);
        setTimeout(() => timestamps.delete(message.author.id), cooldownAmount)

        try {
            cmd.run(client, message, args);
        } catch (error) {
            console.log(error);
            message.reply('ƒë√£ x·∫£y ra l·ªói khi c·ªë g·∫Øng s·ª≠ d·ª•ng l·ªánh ƒë√≥!');
        }
    }
}